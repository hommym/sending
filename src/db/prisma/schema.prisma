// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TransactionType{
sender
recipient
}


model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String?
  createdAt     DateTime @default(now())
  isVerified    Boolean @default(false)
  otp           Otp?
  transactions  Transaction[]
  account       Account?
}

model Otp {
  userId    Int    @id
  code      String
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  updatedAt DateTime @updatedAt

}

model Account {
  userId      Int      @id
  accountNo   Int      @unique
  balance     String   @default("0.00")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Transaction {
  ref          Int      @id @default(autoincrement())
  amount       String
  description  String?
  type         TransactionType    @default(sender)
  ownerId      Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [ownerId], references: [id])
}